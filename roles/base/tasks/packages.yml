---
- name: Install reflector
  tags:
    - packages
  ansible.builtin.package:
    name: reflector
  become: true
  when: ansible_distribution == "Archlinux"

- name: Update pacman mirrorlist
  tags:
    - packages
  ansible.builtin.script: choose-mirror.sh
  become: true
  when: ansible_distribution == "Archlinux"

- name: Copy file pacman.conf to /etc
  tags:
    - packages
  ansible.builtin.copy:
    src: pacman.conf
    dest: /etc
    owner: root
    group: root
    mode: '0644'
  become: true
  when: ansible_distribution == "Archlinux"

- name: Set intel variable when distribution is Archlinux (if necessary)
  tags:
    - packages
  ansible.builtin.set_fact:
    intel: intel-ucode
  when: ansible_distribution == "Archlinux" and "GenuineIntel" in ansible_processor

- name: Set intel variable when distribution is Ubuntu (if necessary)
  tags:
    - packages
  ansible.builtin.set_fact:
    intel: intel-microcode
  when: ansible_distribution in ["Ubuntu", "Debian"] and "GenuineIntel" in ansible_processor

- name: Enable contrib, non-free and non-free-firmware repos
  tags:
    - packages
  ansible.builtin.apt_repository:
    repo: '{{ item.repo }}'
    state: present
  loop:
    - { repo: 'deb http://deb.debian.org/debian bookworm main contrib non-free non-free-firmware' }
    - { repo: 'deb http://deb.debian.org/debian bookworm-updates main contrib non-free non-free-firmware' }
    - { repo: 'deb http://security.debian.org bookworm-security main contrib non-free non-free-firmware' }
  become: true
  when: ansible_distribution in ["Ubuntu", "Debian"]

- name: Install microcode updates for intel (if necessary)
  tags:
    - packages
  ansible.builtin.package:
    name: "{{ intel }}"
    state: present
    update_cache: true
  become: true
  when: '"GenuineIntel" in ansible_facts["processor"]'

- name: Set amd variable when distribution is Archlinux (if necessary)
  tags:
    - packages
  ansible.builtin.set_fact:
    amd: amd-ucode
  when: ansible_distribution == "Archlinux" and "AuthenticAMD" in ansible_processor

- name: Set amd variable when distribution is Ubuntu (if necessary)
  tags:
    - processor-amd
    - never
  ansible.builtin.set_fact:
    amd: amd64-microcode
  when: ansible_distribution == "Ubuntu" and "AuthenticAMD" in ansible_processor

- name: Install microcode updates for amd (if necessary)
  tags:
    - processor-amd
    - never
  ansible.builtin.package:
    name: "{{ amd }}"
    state: present
    update_cache: true
  become: true
  when: '"AuthenticAMD" in ansible_facts["processor"]'

- name: Install nvidia drivers
  tags:
    - nvidia
    - never
  ansible.builtin.package:
    name: nvidia-dkms
    state: present
  when: ansible_distribution == "Archlinux"
  become: true

- name: Remove packages
  tags:
    - packages
  ansible.builtin.package:
    name:
      - arch-install-scripts
      - archinstall
      - brltty
      - nano
      - btop
      - vim
      - grml-zsh-config
      - zsh
      - virtualbox-guest-utils-nox
      - snapd
      - cloud-init
      - vim-common
      - vim-tiny
    state: absent
    update_cache: false
  become: true

- name: Delete config files for cloud-init in Ubuntu
  tags:
    - packages
  ansible.builtin.file:
    path:
      - /etc/cloud/
      - /var/lib/cloud/
    state: absent
  become: true
  when: ansible_distribution in ["Ubuntu", "Debian"]

- name: Install base packages
  tags:
    - packages
  ansible.builtin.package:
    name:
      - ansible
      - git
    state: present
    update_cache: false
  become: true

- name: Install qemu-guest-agent when running on guest
  tags:
    - packages
  ansible.builtin.package:
    name:
      - qemu-guest-agent
    state: present
    update_cache: false
  when: ansible_virtualization_role == "guest"
  become: true
  register: restart_qemu_guest_agent

- name: Restart qemu-guest-agent
  ansible.builtin.service:
    name: qemu-guest-agent
    state: restarted
    enabled: true
  become: true
  when: restart_qemu_guest_agent is changed
