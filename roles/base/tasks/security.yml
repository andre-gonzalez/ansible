---
- name: disable root login
  tags:
    - full-install
    - light-install
    - security
  ansible.builtin.user:
    name: root
    shell: /sbin/nologin
  become: true

- name: install fail2ban
  tags:
    - full-install
    - light-install
    - security
    - fail2ban
  ansible.builtin.package:
    name: fail2ban
  become: true
  notify: "start fail2ban"

- name: Ensure /etc/fail2ban directory exists
  tags:
    - full-install
    - light-install
    - security
    - fail2ban
  ansible.builtin.file:
    dest: "/etc/fail2ban"
    group: root
    mode: 1755
    state: directory
  become: true

- name: Copy fail2ban configuration file
  tags:
    - full-install
    - light-install
    - security
    - fail2ban
  ansible.builtin.copy:
    src: jail.local
    dest: /etc/fail2ban/jail.local
    owner: root
    group: root
    mode: 0644
  become: true
  notify: "start fail2ban"

- name: install apparmor
  tags:
    - full-install
    - light-install
    - security
    - apparmor
  ansible.builtin.package:
    name:
      - apparmor
      - audit
      - python-notify2
  become: true
  when: ansible_distribution == "Archlinux"
  notify: "start apparmor"

- name: Enable apparmor in kernel parameters with audit enabled
  tags:
    - full-install
    - light-install
    - security
    - apparmor
  ansible.builtin.lineinfile:
    path: /etc/default/grub
    regexp: '.*GRUB_CMDLINE_LINUX_DEFAULT=.*'
    line: 'GRUB_CMDLINE_LINUX_DEFAULT="loglevel=3 quiet lsm=landlock,lockdown,yama,integrity,apparmor,bpf" audit=1'
    backrefs: true
  become: true
  notify: update grub

- name: install auditd package
  tags:
    - full-install
    - light-install
    - security
    - apparmor
  ansible.builtin.package:
    name: auditd
  become: true
  when: ansible_distribution in ["Ubuntu", "Debian"]

- name: start auditd
  tags:
    - full-install
    - light-install
    - security
    - apparmor
  ansible.builtin.service:
    name: auditd
    state: started
    enabled: true
  become: true

- name: Ensure group audit exists
  tags:
    - full-install
    - light-install
    - security
    - apparmor
  ansible.builtin.group:
    name: audit
    state: present
  become: yes

- name: "Add the user  {{ lookup('env', 'USER') }} to group audit"
  tags:
    - full-install
    - light-install
    - security
    - apparmor
  ansible.builtin.user:
    name: "{{ lookup('env', 'USER') }}"
    groups: audit
    append: true
  become: yes

- name: add audit group to auditd.conf
  tags:
    - full-install
    - light-install
    - security
    - apparmor
  ansible.builtin.lineinfile:
    path: /etc/audit/auditd.conf
    line: 'log_group = audit'
  become: true

- name: copy apparmor-notify.desktop file to autostart apparmor notify
  tags:
    - full-install
    - light-install
    - security
    - apparmor
  ansible.builtin.copy:
    src: apparmor-notify.desktop
    dest: "{{ lookup('env', 'HOME') }}/.config/autostart"
    owner: "{{ lookup('env', 'USER') }}"
    group: audit
    mode: 0644
  become: true

- name: Enable write-cache to speed up apparmor
  tags:
    - full-install
    - light-install
    - security
    - apparmor
  ansible.builtin.lineinfile:
    path: /etc/apparmor/parser.conf
    regexp: '#write-cache'
    line: 'write-cache'
    backrefs: true
  become: true

- name: install security updates automatically
  tags:
    - full-install
    - light-install
    - security
  ansible.builtin.package:
    name: unattended-upgrades
  become: true
  when: ansible_distribution in ["Ubuntu", "Debian"]
