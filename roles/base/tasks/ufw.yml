---
- name: UFW | Install ufw
  tags:
    - ufw
  ansible.builtin.package:
    name: ufw
  become: true

- name: UFW | Disable ufw
  tags:
    - ufw
  community.general.ufw:
    state: disabled
  become: true

- name: UFW | Set logging on
  tags:
    - ufw
  community.general.ufw:
    logging: "on"
  become: true

# ufw supports connection rate limiting, which is useful for protecting
# against brute-force login attacks. ufw will deny connections if an IP
# address has attempted to initiate 6 or more connections in the last
# 30 seconds. See  http://www.debian-administration.org/articles/187
# for details.
# - name: UFW | Limit ssh
#   tags:
#     - ufw
#     - ssh
#   community.general.ufw:
#     rule: limit
#     port: "{{ ssh_port }}"
#     proto: tcp
#   become: true

- name: UFW | Allow ssh only to local network
  tags:
    - ufw
    - ssh
  community.general.ufw:
    rule: limit
    from_ip: 192.168.0.0/16
    port: "{{ ssh_port }}"
    proto: tcp
  become: true

# - name: UFW | Allow port range 80/tcp
#   tags:
#     - ufw
#   community.general.ufw:
#     rule: allow
#     port: 80
#     proto: tcp
#   become: true

# - name: UFW | Allow port range 443/tcp
#   tags:
#     - ufw
#   community.general.ufw:
#     rule: allow
#     port: 443
#     proto: tcp
#   become: true

- name: UFW | Default policy deny incoming
  tags:
    - ufw
  community.general.ufw:
    default: deny
    direction: incoming
  become: true

- name: UFW | Default policy allow outgoing
  tags:
    - ufw
  community.general.ufw:
    default: allow
    direction: outgoing
  become: true

- name: UFW | Block computers from ping my ip address
  tags:
    - ufw
  ansible.builtin.lineinfile:
    path: /etc/ufw/before.rules
    state: present
    insertafter: "# ok icmp codes for INPUT"
    line: -A ufw-before-input -p icmp --icmp-type echo-request -j DROP
  become: true

- name: UFW | Enable ufw
  tags:
    - ufw
  community.general.ufw:
    state: enabled
  become: true

- name: UFW | Enable ufw in systemd
  tags:
    - ufw
  ansible.builtin.service:
    name: ufw
    state: started
    enabled: true
  become: true
