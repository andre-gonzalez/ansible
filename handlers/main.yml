---
- name: Extract anki files
  tags:
    - full-install
    - light-install
    - anki
  ansible.builtin.unarchive:
    src: "{{ lookup('env', 'HOME') }}/.config/anki/anki-installer.tar.zst"
    dest: "{{ lookup('env', 'HOME') }}/.config/anki/install-files"
  listen: proceed anki installation

- name: Install anki
  tags:
    - full-install
    - light-install
    - anki
  ansible.builtin.script:
    chdir: "{{ lookup('env', 'HOME') }}/.config/anki/install-files"
    cmd: "{{ lookup('env', 'HOME') }}/.config/anki/install-files/install.sh"
  become: true
  listen: proceed anki installation

- name: restart systemd-networkd
  tags:
    - full-install
    - light-install
    - network
  ansible.builtin.service:
    name: systemd-networkd
    state: restarted
    enabled: true
  become: true
  listen: "restart network"

- name: start iwd
  tags:
    - full-install
    - light-install
    - network
  ansible.builtin.service:
    name: iwd
    state: restarted
    enabled: true
  become: true
  listen: "restart network"

- name: restart libvirt
  tags:
    - full-install
    - light-install
    - libvirt
  ansible.builtin.service:
    name: libvirtd
    state: restarted
    enabled: true
  become: true

- name: Disable root login via ssh
  tags:
    - full-install
    - light-install
    - security
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^PermitRootLogin'
    line: "PermitRootLogin no"
    state: present
    backup: true
  become: true
  listen: "secure ssh"

- name: Disable password login via ssh
  tags:
    - full-install
    - light-install
    - security
    - ssh
  ansible.builtin.lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^PasswordAuthentication'
    line: "PasswordAuthentication no"
    state: present
    backup: true
  become: true
  listen: "secure ssh"

- name: restart ssh
  tags:
    - full-install
    - light-install
    - security
    - ssh
  ansible.builtin.service:
    name: sshd
    state: restarted
  become: true
  listen: "secure ssh"

- name: restart preload
  tags:
    - full-install
    - light-install
    - preload
  ansible.builtin.service:
    name: preload
    state: restarted
    enabled: true
  become: true

- name: copy file update-grub
  tags:
    - full-install
    - light-install
    - grub
  ansible.builtin.copy:
    src: update-grub
    dest: /usr/sbin
    owner: root
    group: root
    mode: 0755
  become: true
  listen: "update grub"

- name: run update grub
  tags:
    - full-install
    - light-install
    - grub
  ansible.builtin.command: update-grub
  become: true
  listen: "update grub"

- name: restart tlp
  tags:
    - full-install
    - light-install
    - tlp
  ansible.builtin.service:
    name: tlp
    state: restarted
    enabled: true
  become: true
