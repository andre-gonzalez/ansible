- name: install reflector
  tags:
    - packages-install
    - packages
    - full-install
  package:
    name: reflector
  become: true
  when: ansible_distribution == "Archlinux"

- name: update pacman mirrorlist
  tags:
    - packages
    - full-install
  script: choose-mirror.sh
  become: true
  when: ansible_distribution == "Archlinux"

- name: copy file pacman.conf to /etc
  tags:
    - full-install
  copy:
    src: pacman.conf
    dest: /etc
    owner: root
    group: root
    mode: 0644
  become: true
  when: ansible_distribution == "Archlinux"

- name: Set intel variable when distribution is Archlinux (if necessary)
  set_fact:
    intel: intel-ucode
  when: (ansible_distribution == "Archlinux") and (processor == "intel")

- name: Set intel variable when distribution is Ubuntu (if necessary)
  set_fact:
    intel: intel-acm
  when: (ansible_distribution == "Ubuntu") and (processor == "intel")

- name: Install microcode updates for intel (if necessary)
  tags:
    - processor
    - full-install
  package:
    name: "{{ intel }}"
    state: present
    update_cache: true
  when: processor == "intel"
  become: true

- name: Set amd variable when distribution is Archlinux (if necessary)
  set_fact:
    amd: amd-ucode
  when: ansible_distribution == "Archlinux"

- name: Set amd variable when distribution is Ubuntu (if necessary)
  set_fact:
    amd: amd64-microcode
  when: ansible_distribution == "Ubuntu"

- name: Install microcode updates for amd (if necessary)
  tags:
    - processor
    - full-install
  package:
    name: "{{ amd }}"
    state: present
    update_cache: true
  when: processor == "amd"
  become: true

- name: Install nvidia drivers
  tags:
    - nvidia
  package:
    name: nvidia
    state: present
  when: (graphics_card == "nvidia") and (ansible_distribution == "Archlinux")
  become: true

# - name: remove packages
#   tags:
#     - packages-remove
#     - packages
#     - full-install
#   package:
#     name:
#       - arch-install-scripts
#       - archinstall
#       - brltty nano
#       - htop
#       - vim
#       - openvpn
#       - grml-zsh-config
#       - zsh
#       - virtualbox-guest-utils-nox
#     state: absent
#     update_cache: no
#   become: true

- name: Set xorg variable when distribution is Archlinux (if necessary)
  set_fact:
    xorg:
      - xorg-server
      - xorg-xinit
      - xorg-xsetroot
      - xorg-xrandr
  when: ansible_distribution == "Archlinux"

- name: Set xorg variable when distribution is Ubuntu (if necessary)
  set_fact:
    xorg:
      - xorg
      - libxrandr2
      - libxrandr-dev
  when: ansible_distribution == "Ubuntu"

- name: Set python_pip variable when distribution is Archlinux (if necessary)
  set_fact:
    python_pip: python-pip
  when: ansible_distribution == "Archlinux"

- name: Set python_pip variable when distribution is Ubuntu (if necessary)
  set_fact:
    python_pip: pipenv
  when: ansible_distribution == "Ubuntu"

- name: Set base_devel variable when distribution is Archlinux (if necessary)
  set_fact:
    base_devel: base-devel
  when: ansible_distribution == "Archlinux"

- name: Set base_devel variable when distribution is Ubuntu (if necessary)
  set_fact:
    base_devel: make
  when: ansible_distribution == "Ubuntu"

- name: Set wpa_supplicant variable when distribution is Archlinux (if necessary)
  set_fact:
    wpa_supplicant: wpa_supplicant
  when: ansible_distribution == "Archlinux"

- name: Set wpa_supplicant variable when distribution is Ubuntu (if necessary)
  set_fact:
    wpa_supplicant: wpasupplicant
  when: ansible_distribution == "Ubuntu"

- name: install packages and update cache
  tags:
    - packages-install
    - packages
    - full-install
  package:
    name:
      - tmux
      - "{{ xorg[0] }}"
      - "{{ xorg[1] }}"
      - "{{ xorg[2] }}"
      - "{{ xorg[3] }}"
      # - xorg-setxkbmap
      - xautolock
      - xbindkeys
      # - arandr
      # - numlockx
      - "{{ python_pip }}"
      - feh
      # - dbeaver
      - unclutter
      # - pamixer
      - "{{ base_devel }}"
      - xclip
      # - ttf-nerd-fonts-symbols-mono
      # - ttf-joypixels
      # - ttf-linux-libertine
      - brightnessctl
      - lxappearance
      # - arc-gtk-theme
      - "{{wpa_supplicant}}"
      # - ripgrep
      # - fd
      # - fzf
      # - baobab
      # - nethogs
      # - lxsession
      # - flameshot
      # - clipmenu
      # - bat
      # - dunst
      # - trash-cli
      # - noto-fonts-emoji
    state: latest
    update_cache: yes
  become: true
