---
# tasks to complete before running roles
- name: Pre-run | Start pre-run tasks
  hosts: all
  tags: always
  become: true
  pre_tasks:
    - name: Pre-run | Update package cache (arch)
      tags: always
      community.general.pacman:
        update_cache: true
      changed_when: false
      when: ansible_distribution == "Archlinux"

    - name: Pre-run | Update package cache (debian, etc)
      tags: always
      ansible.builtin.apt:
        update_cache: true
      changed_when: false
      when: ansible_distribution in ["Debian", "Ubuntu"]
  # vars_prompt:
  #   - name: neomutt_email
  #     prompt: What is the email you want in neomutt?
  #     private: false
  #   - name: neomutt_password
  #     prompt: What is the password of your email in neomutt?

# run roles
- name: Base Role | Run base role
  hosts: all
  tags:
    - base
    - light_workstation
    - heavy_workstation
    - samsung_expert
    - work
    - server
  become: true
  roles:
    - base

- name: Light_workstation Role | Run light_workstation role
  hosts: light_workstation
  tags:
    - light_workstation
    - heavy_workstation
    - samsung_expert
  roles:
    - light_workstation

- name: Heavy_workstation Role | Run heavy_workstation role
  hosts: heavy_workstation
  tags:
    - heavy_workstation
    - samsung_expert
  roles:
    - heavy_workstation

- name: Work Role | Run work role
  hosts: work
  tags:
    - work
    - samsung_expert
  roles:
    - work

- name: Samsung_expert Role | Run samsung_expert role
  hosts: samsung_expert
  tags: samsung_expert
  roles:
    - samsung_expert

- name: nvidia Role | Run nvidia role
  hosts: nvidia
  tags: nvidia
  roles:
    - nvidia

- name: Server Role | Run server role
  hosts: server
  tags: server
  become: true
  roles:
    - server

# end of run cleanup
- name: Post-run | Start post-run tasks
  hosts: all
  become: true
  tasks:
    - name: Post-run | Cleanup package cache (debian and ubuntu)
      tags: always
      ansible.builtin.apt:
        autoclean: true
      changed_when: false
      when: ansible_distribution in ["Debian", "Pop!_OS", "Ubuntu"]

    - name: Post-run | Autoremove orphan packages (debian and ubuntu)
      tags: always
      ansible.builtin.apt:
        autoremove: true
        purge: true
      when: ansible_distribution in ["Debian", "Pop!_OS", "Ubuntu"]
